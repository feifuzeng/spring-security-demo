<?xml version="1.0" encoding="UTF-8"?>
	<beans xmlns="http://www.springframework.org/schema/beans"
		   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		   xmlns:tx="http://www.springframework.org/schema/tx"
		   xmlns:jdbc="http://www.springframework.org/schema/jdbc"
		   xmlns:context="http://www.springframework.org/schema/context"
		   xmlns:aop="http://www.springframework.org/schema/aop"
		   xsi:schemaLocation="
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">


		<!-- 引入属性文件 -->
		<context:property-placeholder location="classpath:default.properties" />
		<!-- 数据源配置 -->
		<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
			  init-method="init" destroy-method="close">
			<property name="driverClassName" value="${jdbc.driver}" />
			<property name="url" value="${jdbc.url}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />
			<!-- 初始化连接大小 -->
			<property name="initialSize" value="0" />
			<!-- 连接池最大使用连接数量 -->
			<property name="maxActive" value="20" />
			<!-- 连接池最小空闲 -->
			<property name="minIdle" value="1" />
			<!-- 获取连接最大等待时间 -->
			<property name="maxWait" value="60000" />
			<!-- <property name="poolPreparedStatements" value="true" /> <property
                name="maxPoolPreparedStatementPerConnectionSize" value="33" /> -->
			<property name="validationQuery" value="${jdbc.validation.query}" />
			<property name="testOnBorrow" value="true" />
			<property name="testOnReturn" value="false" />
			<property name="testWhileIdle" value="true" />

			<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
			<property name="timeBetweenEvictionRunsMillis" value="60000" />
			<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
			<property name="minEvictableIdleTimeMillis" value="300000" />

			<!-- 打开removeAbandoned功能 -->
			<property name="removeAbandoned" value="true" />
			<!-- 1800秒，也就是30分钟 -->
			<property name="removeAbandonedTimeout" value="1800" />
			<!-- 关闭abanded连接时输出错误日志 -->
			<property name="logAbandoned" value="true" />

			<!-- 开启Druid的监控统计功能 -->
			<property name="filters" value="stat" />
			<!--<property name="filters" value="mergeStat" /> -->
			<!-- Oracle连接是获取字段注释 -->
			<property name="connectProperties">
				<props>
					<prop key="remarksReporting">true</prop>
				</props>
			</property>
		</bean>

		<bean id="logFilter" class="com.alibaba.druid.filter.logging.Slf4jLogFilter">
			<property name="statementExecutableSqlLogEnable" value="false" />
		</bean>

		<!-- transaction manager, use JtaTransactionManager for global tx -->
		<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
			<property name="dataSource" ref="dataSource" />
		</bean>


		<!-- enable component scanning and autowire (beware that this does not enable mapper scanning!) -->
		<context:component-scan base-package="com.demo.service" />
		<!-- enable transaction demarcation with annotations -->
		<tx:annotation-driven transaction-manager="transactionManager"/>
		<!-- define the SqlSessionFactory -->
		<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
			<property name="dataSource" ref="dataSource" />
			<property name="configLocation" value="classpath:mybatis-config.xml"></property>
			<property name="typeAliasesPackage" value="com.demo.domain"/>
		</bean>
		<!-- scan for mappers and let them be autowired -->
		<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
			<property name="basePackage" value="com.demo.dao" />
		</bean>

		<!-- 配置线程池 -->
		<bean id ="taskExecutor"  class ="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor" >
			<!-- 线程池维护线程的最少数量 -->
			<property name ="corePoolSize" value ="5" />
			<!-- 线程池维护线程所允许的空闲时间 -->
			<property name ="keepAliveSeconds" value ="30000" />
			<!-- 线程池维护线程的最大数量 -->
			<property name ="maxPoolSize" value ="1000" />
			<!-- 线程池所使用的缓冲队列 -->
			<property name ="queueCapacity" value ="200" />
		</bean>


	</beans>
